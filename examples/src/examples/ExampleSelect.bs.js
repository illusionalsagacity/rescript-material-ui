// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core from "@material-ui/core";
import * as JsxRuntime from "react/jsx-runtime";
import * as Styles from "@material-ui/styles";

function getSpacing(theme, num) {
  return String(Curry._1(theme.spacing, num)) + "px";
}

var useStyles = Styles.makeStyles(function (theme) {
      return {
              root: {
                display: "flex",
                flexWrap: "wrap"
              },
              formControl: {
                margin: getSpacing(theme, 1),
                minWidth: "120px"
              },
              selectEmpty: {
                marginTop: getSpacing(theme, 2)
              }
            };
    });

function ExampleSelect(props) {
  var classes = useStyles();
  var match = React.useReducer((function (param, v) {
          return v;
        }), {
        age: "",
        name: "hai"
      });
  var setValues = match[1];
  var values = match[0];
  var match$1 = React.useReducer((function (param, v) {
          return v;
        }), undefined);
  var setInputLabelEl = match$1[1];
  var inputLabelEl = match$1[0];
  var inputLabel = React.useCallback((function (el) {
          Curry._1(setInputLabelEl, (el == null) ? undefined : Caml_option.some(el));
        }), []);
  var match$2 = React.useReducer((function (param, l) {
          return l;
        }), 0);
  var setLabelWidth = match$2[1];
  React.useEffect((function () {
          if (inputLabelEl !== undefined) {
            Curry._1(setLabelWidth, Caml_option.valFromOption(inputLabelEl).offsetWidth);
          }
          
        }), [inputLabelEl]);
  var handleChangeAge = function (e, param) {
    Curry._1(setValues, {
          age: e.target.value,
          name: values.name
        });
  };
  var handleChangeName = function (e, param) {
    Curry._1(setValues, {
          age: values.age,
          name: e.target.value
        });
  };
  return JsxRuntime.jsx("form", {
              children: JsxRuntime.jsxs("div", {
                    children: [
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    htmlFor: "age-simple"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    inputProps: {
                                      id: "age-simple",
                                      name: "age"
                                    },
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    htmlFor: "age-helper"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.Input, {
                                              id: "age-helper",
                                              name: "age"
                                            })),
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Some important helper text"
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsxs(Core.Select, {
                                    className: classes.selectEmpty,
                                    name: "age",
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    displayEmpty: true,
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Without label"
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    shrink: true,
                                    htmlFor: "age-label-placeholder"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    className: classes.selectEmpty,
                                    name: "age",
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    displayEmpty: true,
                                    input: Caml_option.some(JsxRuntime.jsx(Core.Input, {
                                              id: "age-label-placeholder",
                                              name: "age"
                                            })),
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Label + placeholder"
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Name",
                                    htmlFor: "name-disabled"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Hai",
                                            value: "hai"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Olivier",
                                            value: "olivier"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Kevin",
                                            value: "kevin"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.Input, {
                                              id: "name-disabled",
                                              name: "name"
                                            })),
                                    onChange: handleChangeName,
                                    value: Caml_option.some(values.name)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Disabled"
                                  })
                            ],
                            className: classes.formControl,
                            disabled: true
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Name",
                                    htmlFor: "name-error"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    name: "name",
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Hai",
                                            value: "hai"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Olivier",
                                            value: "olivier"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Kevin",
                                            value: "kevin"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.Input, {
                                              id: "name-error"
                                            })),
                                    onChange: handleChangeName,
                                    renderValue: (function (value) {
                                        return "⚠️  - " + value + "";
                                      }),
                                    value: Caml_option.some(values.name)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Error"
                                  })
                            ],
                            className: classes.formControl,
                            error: true
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Name",
                                    htmlFor: "name-readonly"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Hai",
                                            value: "hai"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Olivier",
                                            value: "olivier"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Kevin",
                                            value: "kevin"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.Input, {
                                              id: "name-readonly",
                                              name: "name",
                                              readOnly: true
                                            })),
                                    onChange: handleChangeName,
                                    value: Caml_option.some(values.name)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Read only"
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    htmlFor: "age-auto-width"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    autoWidth: true,
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.Input, {
                                              id: "age-auto-width",
                                              name: "age"
                                            })),
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Auto width"
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsxs(Core.Select, {
                                    className: classes.selectEmpty,
                                    name: "age",
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Placeholder",
                                            disabled: true,
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    displayEmpty: true,
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Placeholder"
                                  })
                            ],
                            className: classes.formControl
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    htmlFor: "age-required"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    className: classes.selectEmpty,
                                    name: "age",
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    inputProps: {
                                      id: "age-required"
                                    },
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  }),
                              JsxRuntime.jsx(Core.FormHelperText, {
                                    children: "Required"
                                  })
                            ],
                            className: classes.formControl,
                            required: true
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    htmlFor: "outlined-age-simple",
                                    ref: Caml_option.some(inputLabel)
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.OutlinedInput, {
                                              id: "outlined-age-simple",
                                              labelWidth: Caml_option.some(match$2[0]),
                                              name: "age"
                                            })),
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  })
                            ],
                            className: classes.formControl,
                            variant: "outlined"
                          }),
                      JsxRuntime.jsxs(Core.FormControl, {
                            children: [
                              JsxRuntime.jsx(Core.InputLabel, {
                                    children: "Age",
                                    htmlFor: "filled-age-simple"
                                  }),
                              JsxRuntime.jsxs(Core.Select, {
                                    children: [
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: Caml_option.some(JsxRuntime.jsx("em", {
                                                      children: "None"
                                                    })),
                                            value: ""
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Ten",
                                            value: "10"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Twenty",
                                            value: "20"
                                          }),
                                      JsxRuntime.jsx(Core.MenuItem, {
                                            children: "Thirty",
                                            value: "30"
                                          })
                                    ],
                                    input: Caml_option.some(JsxRuntime.jsx(Core.FilledInput, {
                                              id: "filled-age-simple",
                                              name: "age"
                                            })),
                                    onChange: handleChangeAge,
                                    value: Caml_option.some(values.age)
                                  })
                            ],
                            className: classes.formControl,
                            variant: "filled"
                          })
                    ],
                    className: classes.root
                  }),
              autoComplete: "off"
            });
}

var make = ExampleSelect;

export {
  getSpacing ,
  useStyles ,
  make ,
}
/* useStyles Not a pure module */
